<!DOCTYPE html>
<html>
<head>
    <title>Programming Resources</title>

</head>

<body>
    <header>
        <h1>Programming Resources</h1>
        <h3>Homework for week 8.</h3>
    </header>

    <nav class="navbar navbar-default">
        <div class="container-fluid">
        <ul class="nav navbar-nav">
            <li class="active"><a href="index.html">Home</a></li>
            <li><a href="backend_server.html">Backend Server</a></li>
            <li><a href="git_problem.html">Git Problem</a></li>
            <li><a href="javascript.html">Javascript</a></li>
            <li><a href="sql.html">SQL</a></li>
            </ul>
        </div>
    </nav>

    <main>
        <h2>What is a Backend Server?</h2>
        <p>Generally the front end is what the user sees and manipulates. The backend is the part that the user does not see.</p>
        
        <p>https://www.reference.com/technology/back-end-server-d4d0f1b851cd7424 </br>
        One obvious first thing that I liked was that they had a quick answer and a longer answer. Quick: The backend process has three parts: server, database, and application. This is where the technical stuff happens. Longer: If a user accesses a database all the information stays on the server. When the user goes back their information is retrieved from the server. Python, Ruby, and PHP are languages that are used for this. I like that it is easy to understand and well laid out.<p>
        
        <p>https://en.wikipedia.org/wiki/Front_and_back_ends </br>
        Nice first sentence. "In software engineering, the terms front end and back end refers to the separation of concerns between the presentation layer (front end), and the data access layer (back end) of a piece of software, or the physical infrastructure or hardware"</br>
        Lower on the page it has short lists of what is frontend and backend. Nice and clear.</p>
        
        <p>http://blog.teamtreehouse.com/i-dont-speak-your-language-frontend-vs-backend </br>
        Nice article explaining the difference between frontend and backend. The example of the user entering information, the application stores it in the database (which is like a giant Excel spread sheet) which is on the server. Again, simple and clear.</p>
        
        <h3>Not as great.</h3>
        <p>http://searchdatacenter.techtarget.com/definition/back-end Confusing information and layout.</p>
    </main>

    <footer>
        <p>&copy; Lynna, March 2017</p>
    </footer>

</body>
</html>
